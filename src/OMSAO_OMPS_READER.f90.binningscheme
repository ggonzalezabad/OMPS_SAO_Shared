!! MODULE to READ OMPS data
!!
! Created by gga January 2014
!!
! All he5 internals are done by the belgioum (BIRA) module ReadH5dataset
! with small modifications
!!

MODULE OMSAO_OMPS_READER

  USE ReadH5dataset ! Contains the generic HDF5 reading routines

  IMPLICIT NONE
  
  PUBLIC :: TC_SDR_OMPS_READER

  INTEGER (KIND = 4), PARAMETER, PUBLIC :: MAX_NAME_LENGTH = 256

  TYPE, PUBLIC :: TC_SDR_OMPS_type
     CHARACTER (LEN=MAX_NAME_LENGTH) :: filename
     INTEGER*4            :: nLines
     INTEGER*4            :: nXtrack
     INTEGER*4            :: nWavel
     INTEGER*4            :: nLevel
     INTEGER*4            :: nProf
     
     ! Data storage variables
     ! =================================================================
     ! Ancillary data
     REAL*4, DIMENSION(:,:),     POINTER :: CloudPressure => NULL()
     REAL*4, DIMENSION(:,:,:,:), POINTER :: O3Profile => NULL()
     REAL*4, DIMENSION(:),       POINTER :: PressureProfile => NULL()
     REAL*4, DIMENSION(:,:),     POINTER :: SnowIceFraction => NULL()
     REAL*4, DIMENSION(:,:),     POINTER :: StandardDeviation => NULL()
     REAL*4, DIMENSION(:,:),     POINTER :: SurfaceReflectivity => NULL()
     REAL*4, DIMENSION(:,:,:),   POINTER :: TemperatureProfile => NULL()
     REAL*4, DIMENSION(:,:),     POINTER :: TerrainPressure => NULL()
     REAL*4, DIMENSION(:,:),     POINTER :: TropopausePressure => NULL()
     REAL*4, DIMENSION(:,:,:,:), POINTER :: TroposphericO3 => NULL()

     ! Calibration data
     REAL*4, DIMENSION(:,:,:),   POINTER :: BandCenterWavelengths => NULL()
     REAL*4, DIMENSION(:,:,:),   POINTER :: CCDRowColIndicies => NULL()
     REAL*4, DIMENSION(:,:),     POINTER :: DarkCurrentCorrection => NULL()
     REAL*4, DIMENSION(:,:),     POINTER :: RadianceCalCoeff => NULL()
     REAL*4, DIMENSION(:,:,:),   POINTER :: SmearCorrection => NULL()
     REAL*4, DIMENSION(:,:),     POINTER :: SolarFlux => NULL()
     REAL*4, DIMENSION(:,:),     POINTER :: SolarFluxWavelengths => NULL()
     
     ! Geolocation data
     REAL*8, DIMENSION(:),       POINTER :: GoniometricSolarAzimuth => NULL()
     REAL*8, DIMENSION(:),       POINTER :: GoniometricSolarElevation => NULL()
     INTEGER*4, DIMENSION(:,:),  POINTER :: GroundPixelQualityFlags => NULL()
     REAL*8, DIMENSION(:),       POINTER :: ImageMidpoint_TAI93 => NULL()
     INTEGER*4, DIMENSION(:),    POINTER :: InstrumentQualityFlags => NULL()
     REAL*4, DIMENSION(:,:),     POINTER :: Latitude => NULL()
     REAL*4, DIMENSION(:,:),     POINTER :: Longitude => NULL()
     REAL*4, DIMENSION(:,:),     POINTER :: SatelliteAzimuth => NULL()
     REAL*4, DIMENSION(:,:),     POINTER :: SatelliteZenithAngle => NULL()
     REAL*4, DIMENSION(:,:),     POINTER :: SolarAzimuth => NULL()
     REAL*8, DIMENSION(:),       POINTER :: SolarBeta => NULL()
     REAL*8, DIMENSION(:),       POINTER :: SolarDeclination_ECI => NULL()
     REAL*8, DIMENSION(:),       POINTER :: SolarRightAscension_ECI => NULL()
     REAL*8, DIMENSION(:,:),     POINTER :: SolarUnitVectorECI => NULL()
     REAL*4, DIMENSION(:,:),     POINTER :: SolarZenithAngle => NULL()
     REAL*8, DIMENSION(:),       POINTER :: SpacecraftAltitude => NULL()
     REAL*8, DIMENSION(:),       POINTER :: SpacecraftLatitude => NULL()
     REAL*8, DIMENSION(:),       POINTER :: SpacecraftLongitude => NULL()
     REAL*8, DIMENSION(:,:),     POINTER :: SpacecraftPositionECI => NULL()
     REAL*8, DIMENSION(:,:),     POINTER :: SpacecraftVelocityECI => NULL()
     REAL*8, DIMENSION(:),       POINTER :: SubSatelliteSolarZenithAngle => NULL()
     REAL*8, DIMENSION(:),       POINTER :: SunEarthDistance => NULL()
     CHARACTER(LEN=MAX_NAME_LENGTH), &
          DIMENSION(:), POINTER :: UTC_CCSDS_A => NULL()
     REAL*4, DIMENSION(:),       POINTER :: expose => NULL()

     ! Input pointers
     CHARACTER(LEN=6000) :: ControlFileContents !5000 expecting it to be long enough
!!$     CHARACTER(LEN=MAX_NAME_LENGTH) :: TC_L1A_EV
!!$     CHARACTER(LEN=MAX_NAME_LENGTH) :: TC_STB
!!$     CHARACTER(LEN=MAX_NAME_LENGTH) :: TC_mCBC
!!$     CHARACTER(LEN=MAX_NAME_LENGTH) :: TC_mDRK
!!$     CHARACTER(LEN=MAX_NAME_LENGTH) :: TC_mIRF
!!$     CHARACTER(LEN=MAX_NAME_LENGTH) :: TC_mRAD
     
     ! Science data
     REAL*4, DIMENSION(:,:),     POINTER :: ExposureTime => NULL()
     REAL*4, DIMENSION(:,:),     POINTER :: HousekeepingData => NULL()
!!$     INTEGER*4, DIMENSION(:,:,:),POINTER :: IntegrationTimeUsed => NULL()
     INTEGER*4, DIMENSION(:,:),  POINTER :: NumberCoadds => NULL()
     INTEGER*4, DIMENSION(:,:,:),POINTER :: PixelQualityFlags => NULL()
     REAL*4, DIMENSION(:,:,:),   POINTER :: Radiance => NULL()
     REAL*4, DIMENSION(:,:,:),   POINTER :: RadianceError => NULL()
     REAL*4, DIMENSION(:,:,:),   POINTER :: RawCounts => NULL()
     INTEGER*4, DIMENSION(:),    POINTER :: ReportIntQualFlags => NULL()
     INTEGER*4, DIMENSION(:),    POINTER :: SensorStatusBits => NULL()

     END TYPE TC_SDR_OMPS_type

     CONTAINS
       FUNCTION TC_SDR_OMPS_READER(this, filename) RESULT(status)

         ! I'm going to use the Belgiums hdf5 reader
         ! The most recent version of the package is available at:
         ! http://uv-vis.aeronomie.be/software/tools/hdf5read.php
         ! All information available on the OMPS-NPP-NPP-TC_SDR_EV_NASA
         ! type files is going to be readed for possible future use.
         ! Stand alone version.

         CHARACTER (LEN=MAX_NAME_LENGTH)        :: filename
         TYPE (TC_SDR_OMPS_type), INTENT(INOUT) :: this
         INTEGER*2                              :: status, ierr

         ! --------------------------------------
         ! Allocate memory, first deallocating it
         ! --------------------------------------
         IF (ASSOCIATED(this%CloudPressure)) DEALLOCATE(this%CloudPressure)
         IF (ASSOCIATED(this%O3Profile)) DEALLOCATE(this%O3Profile)
         IF (ASSOCIATED(this%PressureProfile)) DEALLOCATE(this%PressureProfile)
         IF (ASSOCIATED(this%SnowIceFraction)) DEALLOCATE(this%SnowIceFraction)
         IF (ASSOCIATED(this%StandardDeviation)) DEALLOCATE(this%StandardDeviation)
         IF (ASSOCIATED(this%SurfaceReflectivity)) DEALLOCATE(this%SurfaceReflectivity)
         IF (ASSOCIATED(this%TemperatureProfile)) DEALLOCATE(this%TemperatureProfile)
         IF (ASSOCIATED(this%TerrainPressure)) DEALLOCATE(this%TerrainPressure)
         IF (ASSOCIATED(this%TropopausePressure)) DEALLOCATE(this%TropopausePressure)
         IF (ASSOCIATED(this%TroposphericO3)) DEALLOCATE(this%TroposphericO3)
         IF (ASSOCIATED(this%BandCenterWavelengths)) DEALLOCATE(this%BandCenterWavelengths)
         IF (ASSOCIATED(this%CCDRowColIndicies)) DEALLOCATE(this%CCDRowColIndicies)
         IF (ASSOCIATED(this%DarkCurrentCorrection)) DEALLOCATE(this%DarkCurrentCorrection)
         IF (ASSOCIATED(this%RadianceCalCoeff)) DEALLOCATE(this%RadianceCalCoeff)
         IF (ASSOCIATED(this%SmearCorrection)) DEALLOCATE(this%SmearCorrection)
         IF (ASSOCIATED(this%SolarFlux)) DEALLOCATE(this%SolarFlux)
         IF (ASSOCIATED(this%SolarFluxWavelengths)) DEALLOCATE(this%SolarFluxWavelengths)
         IF (ASSOCIATED(this%GoniometricSolarAzimuth)) DEALLOCATE(this%GoniometricSolarAzimuth)
         IF (ASSOCIATED(this%GoniometricSolarElevation)) DEALLOCATE(this%GoniometricSolarElevation)
         IF (ASSOCIATED(this%GroundPixelQualityFlags)) DEALLOCATE(this%GroundPixelQualityFlags)
         IF (ASSOCIATED(this%ImageMidpoint_TAI93)) DEALLOCATE(this%ImageMidpoint_TAI93)
         IF (ASSOCIATED(this%InstrumentQualityFlags)) DEALLOCATE(this%InstrumentQualityFlags)
         IF (ASSOCIATED(this%Latitude)) DEALLOCATE(this%Latitude)
         IF (ASSOCIATED(this%Longitude)) DEALLOCATE(this%Longitude)
         IF (ASSOCIATED(this%SatelliteAzimuth)) DEALLOCATE(this%SatelliteAzimuth)
         IF (ASSOCIATED(this%SatelliteZenithAngle)) DEALLOCATE(this%SatelliteZenithAngle)
         IF (ASSOCIATED(this%SolarAzimuth)) DEALLOCATE(this%SolarAzimuth)
         IF (ASSOCIATED(this%SolarBeta)) DEALLOCATE(this%SolarBeta)
         IF (ASSOCIATED(this%SolarDeclination_ECI)) DEALLOCATE(this%SolarDeclination_ECI)
         IF (ASSOCIATED(this%SolarRightAscension_ECI)) DEALLOCATE(this%SolarRightAscension_ECI)
         IF (ASSOCIATED(this%SolarUnitVectorECI)) DEALLOCATE(this%SolarUnitVectorECI)
         IF (ASSOCIATED(this%SolarZenithAngle)) DEALLOCATE(this%SolarZenithAngle)
         IF (ASSOCIATED(this%SpacecraftAltitude)) DEALLOCATE(this%SpacecraftAltitude)
         IF (ASSOCIATED(this%SpacecraftLatitude)) DEALLOCATE(this%SpacecraftLatitude)
         IF (ASSOCIATED(this%SpacecraftLongitude)) DEALLOCATE(this%SpacecraftLongitude)
         IF (ASSOCIATED(this%SpacecraftPositionECI)) DEALLOCATE(this%SpacecraftPositionECI)
         IF (ASSOCIATED(this%SpacecraftVelocityECI)) DEALLOCATE(this%SpacecraftVelocityECI)
         IF (ASSOCIATED(this%SubSatelliteSolarZenithAngle)) DEALLOCATE(this%SubSatelliteSolarZenithAngle)
         IF (ASSOCIATED(this%SunEarthDistance)) DEALLOCATE(this%SunEarthDistance)
         IF (ASSOCIATED(this%UTC_CCSDS_A)) DEALLOCATE(this%UTC_CCSDS_A)
         IF (ASSOCIATED(this%expose)) DEALLOCATE(this%expose)
         IF (ASSOCIATED(this%ExposureTime)) DEALLOCATE(this%ExposureTime)
         IF (ASSOCIATED(this%HousekeepingData)) DEALLOCATE(this%HousekeepingData)
!!$         IF (ASSOCIATED(this%IntegrationTimeUsed)) DEALLOCATE(this%IntegrationTimeUsed)
         IF (ASSOCIATED(this%NumberCoadds)) DEALLOCATE(this%NumberCoadds)
         IF (ASSOCIATED(this%PixelQualityFlags)) DEALLOCATE(this%PixelQualityFlags)
         IF (ASSOCIATED(this%Radiance)) DEALLOCATE(this%Radiance)
         IF (ASSOCIATED(this%RadianceError)) DEALLOCATE(this%RadianceError)
         IF (ASSOCIATED(this%RawCounts)) DEALLOCATE(this%RawCounts)
         IF (ASSOCIATED(this%ReportIntQualFlags)) DEALLOCATE(this%ReportIntQualFlags)
         IF (ASSOCIATED(this%SensorStatusBits)) DEALLOCATE(this%SensorStatusBits)

         ! ----------------------------------------------------------
         ! Filling up the dimension variables nLines, nXtrack, nWavel
         ! ----------------------------------------------------------
         CALL H5ReadDataset(filename, &
              "/SCIENCE_DATA/BinScheme1/Radiance", this%nLines, this%nXtrack, this%nWavel)
         IF (ErrorFlag.lt.0) goto 990 
         this%nprof  = 10
         this%nlevel = 11

         ALLOCATE(this%CloudPressure(this%nXtrack,this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Cloud Pressure'
            GOTO 990
         END IF           
         ALLOCATE(this%O3Profile(this%nXtrack,this%nLines,this%nLevel,this%nProf), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading O3 Profile'
            GOTO 990
         END IF
         ALLOCATE(this%PressureProfile(this%nLevel), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Pressure Profile'
            GOTO 990
         END IF
         ALLOCATE(this%SnowIceFraction(this%nXtrack,this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Snow Ice Fraction'
            GOTO 990
         END IF
         ALLOCATE(this%StandardDeviation(this%nXtrack,this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Standard Deviation'
            GOTO 990
         END IF
         ALLOCATE(this%SurfaceReflectivity(this%nXtrack,this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Surface Reflectivity'
            GOTO 990
         END IF
         ALLOCATE(this%TemperatureProfile(this%nXtrack,this%nLines,this%nLevel), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Temperature Profile'
            GOTO 990
         END IF
         ALLOCATE(this%TerrainPressure(this%nXtrack,this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Terrain Pressure'
            GOTO 990
         END IF
         ALLOCATE(this%TropopausePressure(this%nXtrack,this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Tropopause Pressure'
            GOTO 990
         END IF
         ALLOCATE(this%TroposphericO3(this%nXtrack,this%nLines,4,this%nProf), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Tropospheric O3'
            GOTO 990
         END IF
         ALLOCATE(this%BandCenterWavelengths(this%nWavel,this%nXtrack,this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Band Center Wavelengths'
            GOTO 990
         END IF
         ALLOCATE(this%CCDRowColIndicies(this%nWavel,this%nXtrack,2), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading CCD Row Col Indices'
            GOTO 990
         END IF
         ALLOCATE(this%DarkCurrentCorrection(this%nWavel,this%nXtrack), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Dark Current Correction'
            GOTO 990
         END IF
         ALLOCATE(this%RadianceCalCoeff(this%nWavel,this%nXtrack), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Radiance Cal Coeff'
            GOTO 990
         END IF
         ALLOCATE(this%SmearCorrection(this%nWavel,this%nXtrack,this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Smear Correction'
            GOTO 990
         END IF
         ALLOCATE(this%SolarFlux(this%nWavel,this%nXtrack), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Solar Flux'
            GOTO 990
         END IF
         ALLOCATE(this%SolarFluxWavelengths(this%nWavel,this%nXtrack), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Solar Flux Wavelengths'
            GOTO 990
         END IF
         ALLOCATE(this%GoniometricSolarAzimuth(this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Goniometric Solar Azimuth'
            GOTO 990
         END IF
         ALLOCATE(this%GoniometricSolarElevation(this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Goniometric Solar Elevation'
            GOTO 990
         END IF
         ALLOCATE(this%GroundPixelQualityFlags(this%nXtrack,this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Ground Pixel Quality Flags'
            GOTO 990
         END IF
         ALLOCATE(this%ImageMidpoint_TAI93(this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Image Mid point'
            GOTO 990
         END IF
         ALLOCATE(this%InstrumentQualityFlags(this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Instrument Quality Flags'
            GOTO 990
         END IF
         ALLOCATE(this%Latitude(this%nXtrack,this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Latitude'
            GOTO 990
         END IF
         ALLOCATE(this%Longitude(this%nXtrack,this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Longitude'
            GOTO 990
         END IF
         ALLOCATE(this%SatelliteAzimuth(this%nXtrack,this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Satellite Azimuth'
            GOTO 990
         END IF
         ALLOCATE(this%SatelliteZenithAngle(this%nXtrack,this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Satellite Zenith Angle'
            GOTO 990
         END IF
         ALLOCATE(this%SolarAzimuth(this%nXtrack,this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Solar Azimuth'
            GOTO 990
         END IF
         ALLOCATE(this%SolarBeta(this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Solar Beta'
            GOTO 990
         END IF
         ALLOCATE(this%SolarDeclination_ECI(this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Solar Declination'
            GOTO 990
         END IF
         ALLOCATE(this%SolarRightAscension_ECI(this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Solar Right Ascension'
            GOTO 990
         END IF
         ALLOCATE(this%SolarUnitVectorECI(3,this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Solar Unit Vector'
            GOTO 990
         END IF
         ALLOCATE(this%SolarZenithAngle(this%nXtrack,this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Solar Zenith Angle'
            GOTO 990
         END IF
         ALLOCATE(this%SpacecraftAltitude(this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Spacecraft Altitude'
            GOTO 990
         END IF
         ALLOCATE(this%SpacecraftLatitude(this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Spacecraft Latitude'
            GOTO 990
         END IF
         ALLOCATE(this%SpacecraftLongitude(this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Spacecraft Longitude'
            GOTO 990
         END IF
         ALLOCATE(this%SpacecraftPositionECI(3,this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Spacecraft position'
            GOTO 990
         END IF
         ALLOCATE(this%SpacecraftVelocityECI(3,this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Spacecraft Velocity'
            GOTO 990
         END IF
         ALLOCATE(this%SubSatelliteSolarZenithAngle(this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Sub Satellite Solar Zenith Angle'
            GOTO 990
         END IF
         ALLOCATE(this%SunEarthDistance(1), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Sun Earth Distance'
            GOTO 990
         END IF
         ALLOCATE(this%UTC_CCSDS_A(this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading UTC_CCSDS_A'
            GOTO 990
         END IF
         ALLOCATE(this%expose(1), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading expose'
            GOTO 990
         END IF
         ALLOCATE(this%ExposureTime(1,this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Exposure Time'
            GOTO 990
         END IF
         ALLOCATE(this%HousekeepingData(8,this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading House keeping data'
            GOTO 990
         END IF
!!$         ALLOCATE(this%IntegrationTimeUsed(this%nWavel,this%nXtrack,this%nLines), &
!!$         STAT = ierr)
!!$         IF ( ierr .NE. 0 ) THEN
!!$            ErrorMessage = 'Error reading Integration Time Used'
!!$            GOTO 990
!!$         END IF
         ALLOCATE(this%NumberCoadds(1,this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Number Coadds'
            GOTO 990
         END IF
         ALLOCATE(this%PixelQualityFlags(this%nWavel,this%nXtrack,this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Pixel Quality Flags'
            GOTO 990
         END IF
         ALLOCATE(this%Radiance(this%nWavel,this%nXtrack,this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Radiance'
            GOTO 990
         END IF
         ALLOCATE(this%RadianceError(this%nWavel,this%nXtrack,this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Radiance Error'
            GOTO 990
         END IF
         ALLOCATE(this%RawCounts(this%nWavel,this%nXtrack,this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Raw Counts'
            GOTO 990
         END IF
         ALLOCATE(this%ReportIntQualFlags(this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Report Int Qual Flags'
            GOTO 990
         END IF
         ALLOCATE(this%SensorStatusBits(this%nLines), STAT = ierr)
         IF ( ierr .NE. 0 ) THEN
            ErrorMessage = 'Error reading Sensor Status Bits'
            GOTO 990
         END IF

         ! ----------------------------
         ! Read elements of the h5 file
         ! ----------------------------
         ! Ancillary data
         ! --------------
         CALL H5ReadDataset(filename, &
              "/ANC_DATA/BinScheme1/CloudPressure", this%CloudPressure)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/ANC_DATA/BinScheme1/O3Profile", this%O3Profile)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/ANC_DATA/BinScheme1/PressureProfile", this%PressureProfile)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/ANC_DATA/BinScheme1/SnowIceFraction", this%SnowIceFraction)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/ANC_DATA/BinScheme1/StandardDeviation", this%StandardDeviation)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/ANC_DATA/BinScheme1/SurfaceReflectivity", this%SurfaceReflectivity)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/ANC_DATA/BinScheme1/TemperatureProfile", this%TemperatureProfile)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/ANC_DATA/BinScheme1/TerrainPressure", this%TerrainPressure)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/ANC_DATA/BinScheme1/TropopausePressure", this%TropopausePressure)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/ANC_DATA/BinScheme1/TroposphericO3", this%TroposphericO3)
         IF (ErrorFlag.lt.0) goto 990
         ! ----------------
         ! Calibration data
         ! ----------------
         CALL H5ReadDataset(filename, &
              "/CALIBRATION_DATA/BinScheme1/BandCenterWavelengths", &
              this%BandCenterWavelengths)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/CALIBRATION_DATA/CCDRowColIndicies", this%CCDRowColIndicies)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/CALIBRATION_DATA/BinScheme1/DarkCurrentCorrection", &
              this%DarkCurrentCorrection)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/CALIBRATION_DATA/BinScheme1/RadianceCalCoeff", this%RadianceCalCoeff)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/CALIBRATION_DATA/BinScheme1/SmearCorrection", this%SmearCorrection)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/CALIBRATION_DATA/BinScheme1/SolarFlux", this%SolarFlux)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/CALIBRATION_DATA/BinScheme1/SolarFluxWavelengths", &
              this%SolarFluxWavelengths)
         IF (ErrorFlag.lt.0) goto 990
         ! ----------------
         ! Geolocation data
         ! ----------------
         CALL H5ReadDataset(filename, &
              "/GEOLOCATION_DATA/GoniometricSolarAzimuth", &
              this%GoniometricSolarAzimuth)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/GEOLOCATION_DATA/GoniometricSolarElevation", &
              this%GoniometricSolarElevation)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/GEOLOCATION_DATA/BinScheme1/GroundPixelQualityFlags", &
              this%GroundPixelQualityFlags)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/GEOLOCATION_DATA/ImageMidpoint_TAI93", this%ImageMidpoint_TAI93)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/GEOLOCATION_DATA/InstrumentQualityFlags", &
              this%InstrumentQualityFlags)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/GEOLOCATION_DATA/BinScheme1/Latitude", &
              this%Latitude)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/GEOLOCATION_DATA/BinScheme1/Longitude", &
              this%Longitude)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/GEOLOCATION_DATA/BinScheme1/SatelliteAzimuth", &
              this%SatelliteAzimuth)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/GEOLOCATION_DATA/BinScheme1/SatelliteZenithAngle", &
              this%SatelliteZenithAngle)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/GEOLOCATION_DATA/BinScheme1/SolarAzimuth", &
              this%SolarAzimuth)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/GEOLOCATION_DATA/SolarBeta", this%SolarBeta)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/GEOLOCATION_DATA/SolarDeclination_ECI", this%SolarDeclination_ECI)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/GEOLOCATION_DATA/SolarRightAscension_ECI", &
              this%SolarRightAscension_ECI)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/GEOLOCATION_DATA/SolarUnitVectorECI", this%SolarUnitVectorECI)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/GEOLOCATION_DATA/BinScheme1/SolarZenithAngle", &
              this%SolarZenithAngle)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/GEOLOCATION_DATA/SpacecraftAltitude", this%SpacecraftAltitude)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/GEOLOCATION_DATA/SpacecraftLatitude", this%SpacecraftLatitude)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/GEOLOCATION_DATA/SpacecraftLongitude", this%SpacecraftLongitude)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/GEOLOCATION_DATA/SpacecraftPositionECI", this%SpacecraftPositionECI)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/GEOLOCATION_DATA/SpacecraftVelocityECI", this%SpacecraftVelocityECI)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/GEOLOCATION_DATA/SubSatelliteSolarZenithAngle", &
              this%SubSatelliteSolarZenithAngle)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/GEOLOCATION_DATA/SunEarthDistance", this%SunEarthDistance)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/GEOLOCATION_DATA/UTC_CCSDS_A", this%UTC_CCSDS_A)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/GEOLOCATION_DATA/expose", this%expose)
         IF (ErrorFlag.lt.0) goto 990
         ! --------------
         ! Input pointers
         ! --------------
         CALL H5ReadDataset(filename, &
              "/InputPointers/ControlFileContents", this%ControlFileContents)
         IF (ErrorFlag.lt.0) goto 990
!!$         CALL H5ReadDataset(filename, &
!!$              "/InputPointers/TC_STB", this%TC_L1A_EV)
!!$         IF (ErrorFlag.lt.0) goto 990
!!$         CALL H5ReadDataset(filename, &
!!$              "/InputPointers/TC_STB", this%TC_STB)
!!$         IF (ErrorFlag.lt.0) goto 990
!!$         CALL H5ReadDataset(filename, &
!!$              "/InputPointers/TC_mCBC", this%TC_mCBC)
!!$         IF (ErrorFlag.lt.0) goto 990
!!$         CALL H5ReadDataset(filename, &
!!$              "/InputPointers/TC_mDRK", this%TC_mDRK)
!!$         IF (ErrorFlag.lt.0) goto 990
!!$         CALL H5ReadDataset(filename, &
!!$              "/InputPointers/TC_mIRF", this%TC_mIRF)
!!$         IF (ErrorFlag.lt.0) goto 990
!!$         CALL H5ReadDataset(filename, &
!!$              "/InputPointers/TC_mRAD", this%TC_mRAD)
!!$         IF (ErrorFlag.lt.0) goto 990       
         ! ------------
         ! Science data
         ! ------------
         CALL H5ReadDataset(filename, &
              "/SCIENCE_DATA/ExposureTime", this%ExposureTime)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/SCIENCE_DATA/HousekeepingData", this%HousekeepingData)
         IF (ErrorFlag.lt.0) goto 990
!!$         CALL H5ReadDataset(filename, &
!!$              "/SCIENCE_DATA/IntegrationTimeUsed", &
!!$              this%IntegrationTimeUsed)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/SCIENCE_DATA/NumberCoadds", this%NumberCoadds)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/SCIENCE_DATA/BinScheme1/PixelQualityFlags", &
              this%PixelQualityFlags)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/SCIENCE_DATA/BinScheme1/Radiance", this%Radiance)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/SCIENCE_DATA/BinScheme1/RadianceError", &
              this%RadianceError)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/SCIENCE_DATA/BinScheme1/RawCounts", &
              this%RawCounts)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/SCIENCE_DATA/ReportIntQualFlags", this%ReportIntQualFlags)
         IF (ErrorFlag.lt.0) goto 990
         CALL H5ReadDataset(filename, &
              "/SCIENCE_DATA/SensorStatusBits", this%SensorStatusBits)
         IF (ErrorFlag.lt.0) goto 990
 
990      WRITE(*, '(A)') ErrorMessage
         status = ErrorFlag
         RETURN

       END FUNCTION TC_SDR_OMPS_READER
     END MODULE OMSAO_OMPS_READER
